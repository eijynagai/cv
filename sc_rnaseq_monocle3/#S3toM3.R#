library(Seurat)
library(monocle3)

source("/home/park/Hayashi/Seurat3/Mouse/Analysis/H-T-_Res0.3/cfg_params.txt")
load("/home/park/Hayashi/Seurat3/Mouse/Analysis/H-T-_Res0.3/Seurat3.RData")

seurat <- S3

### Building the necessary parts for a basic cds
# part one, gene annotations
gene_annotation <- as.data.frame(rownames(seurat@reductions[["pca"]]@feature.loadings),
		row.names = rownames(seurat@reductions[["pca"]]@feature.loadings))
colnames(gene_annotation) <- "gene_short_name"

# part two, cell information
cell_metadata <- as.data.frame(seurat@assays[["RNA"]]@counts@Dimnames[[2]],
	      row.names = seurat@assays[["RNA"]]@counts@Dimnames[[2]])
colnames(cell_metadata) <- "barcode"

cat( "Number of Genes\t", nrow(gene_annotation), "\n")
cat("Number of Cells\t", nrow(cell_metadata), "\n")

# part three, counts sparse matrix
New_matrix <- seurat@assays[["RNA"]]@counts
New_matrix <- New_matrix[rownames(seurat@reductions[["pca"]]@feature.loadings), ]
expression_matrix <- New_matrix

cat(" Expression Matrix\t", nrow(expression_matrix), "x", ncol(expression_matrix), "\n")

### Construct the basic cds object
cds <- new_cell_data_set(expression_matrix,
                         cell_metadata = cell_metadata,
                         gene_metadata = gene_annotation)
summary( attributes(cds))

### Construct and assign the made up partition
recreate.partition <- c(rep(1, length(cds@colData@rownames)))
names(recreate.partition) <- cds@colData@rownames
recreate.partition <- as.factor(recreate.partition)

cds@clusters@listData[["UMAP"]][["partitions"]] <- recreate.partition

### Assign the cluster info
##list_cluster <- seurat@meta.data[[sprintf("ClusterNames_%s_%sPC", Resolution, nPCS)]]
list_cluster <- seurat@meta.data[["seurat_clusters"]]

#genes: seurat@assays[["RNA"]]@data@Dimnames[[1]]
#cell barcode: seurat@assays[["RNA"]]@data@Dimnames[[2]]
names(list_cluster) <- seurat@assays[["RNA"]]@data@Dimnames[[2]]

cds@clusters@listData[["UMAP"]][["clusters"]] <- list_cluster


### Could be a space-holder, but essentially fills out louvain parameters
cds@clusters@listData[["UMAP"]][["louvain_res"]] <- "NA"

### Assign UMAP coordinate
#cds@reducedDims@listData[["UMAP"]] <-seurat@reductions[["umap"]]@cell.embeddings
cds@int_colData@listData$reducedDims@listData[["UMAP"]] <-seurat@reductions[["umap"]]@cell.embeddings

### Assign feature loading for downstream module analysis
cds@preprocess_aux$gene_loadings <- seurat@reductions[["pca"]]@feature.loadings


### Learn graph, this step usually takes a significant period of time for larger samples
print("Learning graph, which can take a while depends on the sample")
cds <- learn_graph(cds, use_partition = T)

plot_cells(cds, reduction_method="UMAP", group_label_size=6,  graph_label_size=4, cell_size=1, show_trajectory_graph=TRUE)

dev.off()
q()
